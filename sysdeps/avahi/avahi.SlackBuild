#!/bin/sh

# Slackware build script for avahi

# Copyright 2014 Bart van der Hall, Almere, NL
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=avahi
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}
TAG=${TAG:-_dlack}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
        *) export ARCH=$( uname -m ) ;;
  esac
fi

NUMJOBS=${NUMJOBS:-"-j4"}

CWD=$(pwd)
TMP=${TMP:-/tmp/dlackware}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/var/cache/dlackware}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e # Exit on most errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$VERSION.tar.?z*
cd $PKGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

if [ -r ${CWD}/apply-patches.sh ]; then
  . ${CWD}/apply-patches.sh
fi

autoreconf -ivf

intltoolize

CFLAGS="${SLKCFLAGS}" \
CXXFLAGS="${SLKCFLAGS}" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --infodir=/usr/info \
  --disable-manpages \
  --docdir=/usr/doc/${PKGNAM}-${VERSION} \
  --disable-silent-rules \
  --disable-static \
  --disable-qt3 \
  --disable-qt4 \
  --disable-python \
  --with-avahi-user=avahi \
  --with-avahi-group=avahi \
  --with-avahi-priv-access-group=netdev \
  --with-autoipd-user=avahi_autoipd \
  --with-autoipd-group=avahi_autoipd \
  --with-systemdsystemunitdir=/lib/systemd/system \
  --enable-compat-howl \
  --enable-compat-libdns_sd \
  --disable-mono \
  --disable-monodoc \
  --enable-introspection || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# Add python3 support
#mkdir -p $PKG/usr/lib64/python3.6/site-packages/avahi/
#cp -r $PKG/usr/lib64/python2.7/site-packages/avahi/* $PKG/usr/lib64/python3.6/site-packages/avahi/
#rm -fv $PKG/usr/lib64/python3.6/site-packages/avahi/*.py{c,o}
#sed -i 's!/usr/bin/python!/usr/bin/python3!' $PKG/usr/lib64/python3.6/site-packages/avahi/ServiceTypeDatabase.py

# remove example
rm -f ${PKG}/etc/avahi/services/ssh.service
rm -f ${PKG}/etc/avahi/services/sftp-ssh.service

mkdir -p ${PKG}/var/run/avahi-daemon
mkdir -p ${PKG}/var/lib/avahi-autoipd

# Make /etc/avahi/etc/localtime owned by avahi:
mkdir -p ${PKG}/etc/avahi/etc || exit 1
touch ${PKG}/etc/avahi/etc/localtime || exit 1

ln -s avahi-compat-howl.pc ${PKG}/usr/lib${LIBDIRSUFFIX}/pkgconfig/howl.pc || exit 1
ln -s avahi-compat-libdns_sd.pc ${PKG}/usr/lib${LIBDIRSUFFIX}/pkgconfig/libdns_sd.pc || exit 1
ln -s avahi-compat-libdns_sd/dns_sd.h ${PKG}/usr/include/ || exit 1

( cd ${PKG}/etc/avahi || exit 1
  for f in *.{conf,action} ;do
    mv ${f} ${f}.new || exit 1
  done
) || exit 1
mv ${PKG}/etc/dbus-1/system.d/avahi-dbus.conf \
   ${PKG}/etc/dbus-1/system.d/avahi-dbus.conf.new || exit 1

mkdir -p ${PKG}/var/log/setup
#zcat ${CWD}/setup.onlyonce.rc${PKGNAM}daemon.gz \
#  > ${PKG}/var/log/setup/setup.onlyonce.rc${PKGNAM}daemon || exit 1
#chmod 0755 ${PKG}/var/log/setup/setup.onlyonce.rc${PKGNAM}daemon || exit 1

desktop-file-install --delete-original --vendor="" \
  --dir ${PKG}/usr/share/applications \
  --remove-key="Encoding" \
  --remove-key="GenericName" \
  --remove-category="Application" \
  --add-category="GTK" \
  ${PKG}/usr/share/applications/*.desktop || exit 1

mv $PKG/usr/share/man/* $PKG/usr/man
rm -rf $PKG/usr/share/man

# Compress and link manpages, if any:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a LICENSE docs/* $PKG/usr/doc/$PKGNAM-$VERSION
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh  > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
